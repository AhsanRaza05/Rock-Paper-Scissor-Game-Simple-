/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.test.userinterface;

import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Ahsan
 */
public class RockPaperScissorGame extends javax.swing.JFrame {

    /**
     * Creates new form RockPaperScissorGame
     */
    public RockPaperScissorGame() {
        initComponents();
        
        playerScore = 0;
        computerScore = 0;
        System.out.println(rockBtn.getWidth() + ", "+rockBtn.getHeight());
        System.out.println(paperBtn.getWidth() + ", "+paperBtn.getHeight());
        System.out.println(scissorBtn.getWidth() + ", "+scissorBtn.getHeight());
       
        ImageIcon i ;
        Image im;
        
        i = new ImageIcon(getClass().getResource("/images/Rock.png"));
        im = i.getImage();
        im = im.getScaledInstance(rockBtn.getWidth(), rockBtn.getHeight(), Image.SCALE_SMOOTH);
        i = new ImageIcon(im);
        rockBtn.setIcon(i);
        
        
        i = new ImageIcon(getClass().getResource("/images/paper.png"));
        im = i.getImage();
        im = im.getScaledInstance(paperBtn.getWidth(), paperBtn.getHeight(), Image.SCALE_SMOOTH);
        i = new ImageIcon(im);
        paperBtn.setIcon(i);
        
        i = new ImageIcon(getClass().getResource("/images/Scissor.png"));
        im = i.getImage();
        im = im.getScaledInstance(scissorBtn.getWidth(), paperBtn.getHeight(), Image.SCALE_SMOOTH);
        i = new ImageIcon(im);
        scissorBtn.setIcon(i);
        
        System.out.println("\n");
        System.out.println(rockBtn.getWidth() + ", "+rockBtn.getHeight());
        System.out.println(paperBtn.getWidth() + ", "+paperBtn.getHeight());
        System.out.println(scissorBtn.getWidth() + ", "+scissorBtn.getHeight());
    }

    String getcomputerChoice() {

        int result = (int) Math.floor(Math.random() * 3);

        String choice = "";

        if (result == 1) {

            choice = "r";
        } else if (result == 2) {

            choice = "p";
        } else {

            choice = "s";
        }

        return choice;
    }
    
    boolean isDraw() {

        if (playerChoice.equalsIgnoreCase(computerChoice)) {

            return true;
        }

        return false;
    }

    Boolean isGameWon() {

        if (playerChoice.equalsIgnoreCase("p")) {

            if (computerChoice.equalsIgnoreCase("r")) {

                return true;
            }
            return false;
        } else if (playerChoice.equalsIgnoreCase("r")) {

            if (computerChoice.equalsIgnoreCase("s")) {

                return true;
            }
            return false;
        } //else if(playerChoice.equalsIgnoreCase("s")){
        else {

            if (computerChoice.equalsIgnoreCase("p")) {

                return true;
            }
            return false;
        }
// R < P < S < P

//Increasing order
// P > R > S > P
// P < R < S <  
        //return false;
    }
    void updateScores(){
        
        playerScoreLbl.setText("Player : %d".formatted(playerScore));
        computerScoreLbl.setText("Computer : %d".formatted(computerScore));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLbl = new javax.swing.JLabel();
        computerScoreLbl = new javax.swing.JLabel();
        playerScoreLbl = new javax.swing.JLabel();
        rockBtn = new javax.swing.JButton();
        selectionLbl = new javax.swing.JLabel();
        paperBtn = new javax.swing.JButton();
        scissorBtn = new javax.swing.JButton();
        resetGameBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        headerLbl.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        headerLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLbl.setText("Rock Paper Scissors");

        computerScoreLbl.setBackground(new java.awt.Color(0, 0, 0));
        computerScoreLbl.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        computerScoreLbl.setForeground(new java.awt.Color(255, 255, 255));
        computerScoreLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        computerScoreLbl.setText("Computer : 0");
        computerScoreLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        computerScoreLbl.setOpaque(true);

        playerScoreLbl.setBackground(new java.awt.Color(51, 0, 204));
        playerScoreLbl.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        playerScoreLbl.setForeground(new java.awt.Color(255, 255, 255));
        playerScoreLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerScoreLbl.setText("Player : 0");
        playerScoreLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 102)));
        playerScoreLbl.setOpaque(true);

        rockBtn.setBackground(new java.awt.Color(51, 51, 255));
        rockBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        rockBtn.setForeground(new java.awt.Color(255, 255, 255));
        rockBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Rock.png"))); // NOI18N
        rockBtn.setText("Rock");
        rockBtn.setBorderPainted(false);
        rockBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rockBtn.setVerifyInputWhenFocusTarget(false);
        rockBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rockBtn.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        rockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockBtnActionPerformed(evt);
            }
        });

        selectionLbl.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        selectionLbl.setText("Make Your Selection");

        paperBtn.setBackground(new java.awt.Color(51, 51, 255));
        paperBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        paperBtn.setForeground(new java.awt.Color(255, 255, 255));
        paperBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Paper.png"))); // NOI18N
        paperBtn.setText("Paper");
        paperBtn.setBorderPainted(false);
        paperBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        paperBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        paperBtn.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        paperBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperBtnActionPerformed(evt);
            }
        });

        scissorBtn.setBackground(new java.awt.Color(51, 51, 255));
        scissorBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        scissorBtn.setForeground(new java.awt.Color(255, 255, 255));
        scissorBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Scissor.png"))); // NOI18N
        scissorBtn.setText("Scissor");
        scissorBtn.setBorderPainted(false);
        scissorBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        scissorBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        scissorBtn.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        scissorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scissorBtnActionPerformed(evt);
            }
        });

        resetGameBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        resetGameBtn.setText("Reset Game");
        resetGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetGameBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(rockBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(paperBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(scissorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headerLbl)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(resetGameBtn)))
                        .addGap(212, 212, 212))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playerScoreLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(computerScoreLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(selectionLbl)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(headerLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(computerScoreLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerScoreLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(selectionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(paperBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(rockBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                    .addComponent(scissorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockBtnActionPerformed
        // TODO add your handling code here:
        playerChoice = "r";
        computerChoice = getcomputerChoice();
        ImageIcon i;
        
        if (isDraw()) {
            
             i = new ImageIcon(getClass().getResource("/images/Rock.png"));
            JOptionPane.showMessageDialog(this, "Since Computer Choice is Rock, therefore Draw", "RESULT", JOptionPane.INFORMATION_MESSAGE, i);
        
        } else if (isGameWon() == true) {
            
            i = new ImageIcon(getClass().getResource("/images/Scissor.png"));
            JOptionPane.showMessageDialog(this, "Since Computer Choice is Scissor, therefore You Won!", "RESULT", JOptionPane.INFORMATION_MESSAGE, i);
            
            playerScore++;
            updateScores();
            
        } else {
            i = new ImageIcon(getClass().getResource("/images/Paper.png"));
            JOptionPane.showMessageDialog(this, "Since Computer Choice is Paper, therefore You Lose!", "RESULT", JOptionPane.INFORMATION_MESSAGE, i);
   
            computerScore++;
            updateScores();
        }
        
    }//GEN-LAST:event_rockBtnActionPerformed

    private void paperBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperBtnActionPerformed
        // TODO add your handling code here:
        
        playerChoice = "r";
        computerChoice = getcomputerChoice();
        ImageIcon i;
        
        if (isDraw()) {
            
             i = new ImageIcon(getClass().getResource("/images/Paper.png"));
            JOptionPane.showMessageDialog(this, "Since Computer Choice is Paper, therefore Draw", "RESULT", JOptionPane.INFORMATION_MESSAGE, i);
        
        } else if (isGameWon() == true) {
            
            i = new ImageIcon(getClass().getResource("/images/Rock.png"));
            JOptionPane.showMessageDialog(this, "Since Computer Choice is Rock, therefore You Won!", "RESULT", JOptionPane.INFORMATION_MESSAGE, i);
        
            playerScore++;
            updateScores();
            
        } else {
            i = new ImageIcon(getClass().getResource("/images/Scissor.png"));
            JOptionPane.showMessageDialog(this, "Since Computer Choice is Scissor, therefore You Lose!", "RESULT", JOptionPane.INFORMATION_MESSAGE, i);
   
            computerScore++;
            updateScores();
        }
    }//GEN-LAST:event_paperBtnActionPerformed

    private void scissorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scissorBtnActionPerformed
        // TODO add your handling code here:
        
        playerChoice = "r";
        computerChoice = getcomputerChoice();
        ImageIcon i;
        
        if (isDraw()) {
            
             i = new ImageIcon(getClass().getResource("/images/Scissor.png"));
            JOptionPane.showMessageDialog(this, "Since Computer Choice is Scissor, therefore Draw", "RESULT", JOptionPane.INFORMATION_MESSAGE, i);
        
        } else if (isGameWon() == true) {
            
            i = new ImageIcon(getClass().getResource("/images/Paper.png"));
            JOptionPane.showMessageDialog(this, "Since Computer Choice is Paper, therefore You Won!", "RESULT", JOptionPane.INFORMATION_MESSAGE, i);
        
            playerScore++;
            updateScores();
            
        } else {
            i = new ImageIcon(getClass().getResource("/images/Rock.png"));
            JOptionPane.showMessageDialog(this, "Since Computer Choice is Rock, therefore You Lose!", "RESULT", JOptionPane.INFORMATION_MESSAGE, i);
   
            computerScore++;
            updateScores();
        }
        
    }//GEN-LAST:event_scissorBtnActionPerformed

    private void resetGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetGameBtnActionPerformed
        // TODO add your handling code here:
        playerScore = 0;
        computerScore = 0;
        
        updateScores();
        
    }//GEN-LAST:event_resetGameBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RockPaperScissorGame().setVisible(true);
            }
        });
    }
    String playerChoice = "";
    String computerChoice = "";
    Integer playerScore;
    Integer computerScore;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel computerScoreLbl;
    private javax.swing.JLabel headerLbl;
    private javax.swing.JButton paperBtn;
    private javax.swing.JLabel playerScoreLbl;
    private javax.swing.JButton resetGameBtn;
    private javax.swing.JButton rockBtn;
    private javax.swing.JButton scissorBtn;
    private javax.swing.JLabel selectionLbl;
    // End of variables declaration//GEN-END:variables
}
